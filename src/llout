; ModuleID = 'Bcomp'

@ans = common global i32 0, align 4
@i = common global i32 0, align 4
@0 = private unnamed_addr constant [3 x i8] c"%d\00"
@1 = private unnamed_addr constant [5 x i8] c"%d \0A\00"

define void @main() {
entry:
  store i32 1, i32* @ans
  %0 = call i32 @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* @i)
  %1 = load i32, i32* @i
  %gtcomparetmp = icmp ugt i32 %1, 0
  br i1 %gtcomparetmp, label %while, label %whilecont

while:                                            ; preds = %while, %entry
  %2 = load i32, i32* @ans
  %3 = load i32, i32* @i
  %multmp = mul i32 %2, %3
  store i32 %multmp, i32* @ans
  %4 = load i32, i32* @i
  %subtmp = sub i32 %4, 1
  store i32 %subtmp, i32* @i
  %5 = load i32, i32* @i
  %gtcomparetmp1 = icmp ugt i32 %5, 0
  br i1 %gtcomparetmp1, label %while, label %whilecont

whilecont:                                        ; preds = %while, %entry
  %6 = load i32, i32* @ans
  %7 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i32 %6)
  ret void
}

declare i32 @scanf(i8*, i32*)

declare i32 @printf(i8*, i32)
